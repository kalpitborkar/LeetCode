{"id":732316944,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1656309260,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/732316944/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"28.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        if(!root) return false;\n        return isSameTree(root, subRoot) || isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);\n    }\n    \n    bool isSameTree(TreeNode *root1, TreeNode *root2)\n    {\n        if(!root1 || !root2) return root1 == root2;\n        return (\n            root1->val == root2->val &&\n            isSameTree(root1->left, root2->left) &&\n            isSameTree(root1->right, root2->right)\n        );\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}