{"id":731462211,"lang":"cpp","time":"2 weeks, 6 days","timestamp":1656219390,"status_display":"Accepted","runtime":"640 ms","url":"/submissions/detail/731462211/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"128.1 MB","code":"class TimeMap {\npublic:\n    std::unordered_map<std::string, std::vector<std::pair<int, std::string>>> map;\n    \n    TimeMap() {\n        \n    }\n    \n    void set(string key, string value, int timestamp) {\n        map[key].push_back(make_pair(timestamp, value));\n    }\n    \n    string get(string key, int timestamp) {\n        if(!map.count(key)) return \"\";\n        int left = 0, right = map[key].size();\n        \n        while(left < right)\n        {\n            int mid = left + (right - left)/2;\n            if(map[key][mid].first > timestamp) right = mid;\n            else left = mid + 1;\n        }\n        \n        if(left > 0 && left <= map[key].size()) return map[key][left-1].second;\n        return \"\";\n    }\n};\n\n/**\n * Your TimeMap object will be instantiated and called as such:\n * TimeMap* obj = new TimeMap();\n * obj->set(key,value,timestamp);\n * string param_2 = obj->get(key,timestamp);\n */","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"time-based-key-value-store"}