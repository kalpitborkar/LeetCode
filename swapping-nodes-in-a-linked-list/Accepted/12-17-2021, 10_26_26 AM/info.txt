{"id":603001459,"lang":"cpp","time":"7Â months","timestamp":1639716986,"status_display":"Accepted","runtime":"580 ms","url":"/submissions/detail/603001459/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"180.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapNodes(ListNode* head, int k) {\n        ListNode *n1 = nullptr, *n2 = nullptr;\n        \n        for(auto p = head; p != nullptr; p=p->next)\n        {\n            n2 = n2==nullptr ? nullptr : n2->next;\n            if(--k == 0)\n            {\n                n1 = p;\n                n2 = head;\n            }\n        }\n        std::swap(n1->val, n2->val);\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list"}