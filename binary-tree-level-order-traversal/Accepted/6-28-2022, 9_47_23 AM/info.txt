{"id":733115133,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1656389843,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/733115133/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        std::vector<std::vector<int>> res;\n        std::queue<TreeNode*> q;\n        q.push(root);\n        \n        while(!q.empty())\n        {\n            int n = q.size();\n            std::vector<int> row;\n            for(int i = 0; i < n; i++)\n            {\n                TreeNode *top = q.front();\n                q.pop();\n                if(top != NULL)\n                {\n                    row.push_back(top->val);\n                    q.push(top->left);\n                    q.push(top->right);\n                }\n            }\n            if(row.size() > 0) res.push_back(row);\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}