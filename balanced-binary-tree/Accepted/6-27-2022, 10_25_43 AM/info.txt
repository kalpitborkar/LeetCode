{"id":732279158,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1656305743,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/732279158/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        if(!root) return true;\n        return\n            std::abs(calculateHeight(root->left) - calculateHeight(root->right)) <= 1 &&\n            isBalanced(root->left) &&\n            isBalanced(root->right);\n    }\n    \n    int calculateHeight(TreeNode *root)\n    {\n        if(!root) return 0;\n        int leftHeight = calculateHeight(root->left);\n        int rightHeight = calculateHeight(root->right);\n        return 1 + std::max(leftHeight, rightHeight);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}