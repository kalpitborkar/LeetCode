{"id":732277161,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1656305553,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/732277161/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        if(!root) return true;\n        return std::abs(height(root->left) - height(root->right)) <= 1 && isBalanced(root->left) && isBalanced(root->right);\n    }\n    \n    int height(TreeNode *root)\n    {\n        if(!root) return 0;\n        int leftHeight = height(root->left);\n        int rightHeight = height(root->right);\n        \n        return 1 + std::max(leftHeight, rightHeight);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}