{"id":606485637,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1640353954,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/606485637/","is_pending":"Not Pending","title":"Distribute Coins in Binary Tree","memory":"13.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int traverse(TreeNode *root, int &moves)\n    {\n        if(!root)\n        {\n            return 0;\n        }\n        int left = traverse(root->left, moves), right = traverse(root->right, moves);\n        moves += std::abs(left) + std::abs(right);\n        return root->val + left + right - 1;\n    }\n        \n    int distributeCoins(TreeNode* root, int moves = 0) {\n        traverse(root, moves);\n        return moves;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distribute-coins-in-binary-tree"}