{"id":599879219,"lang":"cpp","time":"7 months, 1 week","timestamp":1639156462,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/599879219/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode* root) {\n        if(!root) return true;\n        return helper(root->left, root->right);\n    }\n    \n    bool helper(TreeNode *p, TreeNode *q)\n    {\n        if(!p && !q) return true;\n        else if(!p || !q) return false;\n        \n        if(p->val != q->val) return false;\n        \n        return helper(p->left, q->right) && helper(p->right, q->left);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}