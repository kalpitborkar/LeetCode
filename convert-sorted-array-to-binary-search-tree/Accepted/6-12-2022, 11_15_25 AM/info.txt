{"id":720221762,"lang":"cpp","time":"1Â month","timestamp":1655012725,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/720221762/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return helper(nums, 0, nums.size());\n    }\n    \n    TreeNode* helper(std::vector<int> &nums, int left, int right)\n    {\n        if(left >= right) return nullptr;\n        int mid = left + (right-left)/2;\n        TreeNode *root = new TreeNode(nums[mid]);\n        root->left = helper(nums, left, mid);\n        root->right = helper(nums, mid+1, right);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}