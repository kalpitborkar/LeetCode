{"id":729941356,"lang":"cpp","time":"3 weeks, 1 day","timestamp":1656055269,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/729941356/","is_pending":"Not Pending","title":"Min Stack","memory":"16.4 MB","code":"class MinStack {\npublic:\n    std::vector<std::pair<int, int>> stk;\n    \n    MinStack() {\n        \n    }\n    \n    void push(int val) {\n        int min;\n        if(stk.empty()) min = val;\n        else min = std::min(val, stk.back().second);\n        stk.push_back({val, min});\n    }\n    \n    void pop() {\n        stk.pop_back();\n    }\n    \n    int top() {\n        return stk.back().first;\n    }\n    \n    int getMin() {\n        return stk.back().second;\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack"}