{"id":732253879,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1656303265,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/732253879/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        int d = 0;\n        helper(root, d);\n        return d;\n    }\n    \n    int helper(TreeNode *root, int &d)\n    {\n        if(!root) return 0;\n        int ld = helper(root->left, d);\n        int rd = helper(root->right, d);\n        d = std::max(d, ld + rd);\n        return std::max(ld, rd) + 1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}