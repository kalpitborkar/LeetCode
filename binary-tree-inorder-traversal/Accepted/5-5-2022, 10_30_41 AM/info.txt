{"id":693456809,"lang":"cpp","time":"2 months, 1 week","timestamp":1651726841,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/693456809/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        std::vector<int> res;\n        std::stack<TreeNode*> stk;\n        while(root != NULL || !stk.empty())\n        {\n            while(root != NULL)\n            {\n                stk.push(root);\n                root = root->left;\n            }\n            root = stk.top();\n            stk.pop();\n            res.push_back(root->val);\n            root = root->right;\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}