{"id":693442664,"lang":"cpp","time":"2 months, 1 week","timestamp":1651725233,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/693442664/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        std::vector<int> res;\n        inorder(root, res);\n        return res;\n    }\nprivate:\n    void inorder(TreeNode *root, std::vector<int> &res){\n        if(root == NULL) return;\n        inorder(root->left, res);\n        res.push_back(root->val);\n        inorder(root->right, res);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}