{"id":606491632,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1640355213,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/606491632/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxAncestorDiff(TreeNode* root, int mx = 0, int mn = INT_MAX) {\n        return root ? std::max(maxAncestorDiff(root->left, std::max(mx, root->val), std::min(mn, root->val)), maxAncestorDiff(root->right, std::max(mx, root->val), std::min(mn, root->val))) : mx - mn; \n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}