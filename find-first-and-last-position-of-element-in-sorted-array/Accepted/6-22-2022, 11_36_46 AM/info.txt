{"id":728227476,"lang":"cpp","time":"3 weeks, 3 days","timestamp":1655878006,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/728227476/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"13.7 MB","code":"class Solution {\npublic:\n    vector<int> searchRange(vector<int>& nums, int target) {\n        std::vector<int> res(2);\n        res[0] = findFirst(nums, target);\n        res[1] = findLast(nums, target);\n        return res;\n    }\n    \n    int findFirst(std::vector<int> &nums, int target)\n    {\n        int index = -1;\n        int left = 0;\n        int right = nums.size() - 1;\n        \n        while(left <= right)\n        {\n            int mid = left + (right - left)/2;\n            if(nums[mid] >= target) right = mid - 1;\n            else left = mid + 1;\n            if(nums[mid] == target) index = mid;\n        }\n        return index;\n    }\n    \n    int findLast(std::vector<int> &nums, int target)\n    {\n        int index = -1;\n        int left = 0;\n        int right = nums.size() - 1;\n        \n        while(left <= right)\n        {\n            int mid = left + (right - left)/2;\n            if(nums[mid] <= target) left = mid + 1;\n            else right = mid - 1;\n            if(nums[mid] == target) index = mid;\n        }\n        return index;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array"}