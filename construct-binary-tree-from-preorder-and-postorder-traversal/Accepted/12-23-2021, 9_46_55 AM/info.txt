{"id":605816740,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1640233015,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/605816740/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Postorder Traversal","memory":"25.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int preIndex = 0, posIndex = 0;\n    \n    TreeNode* constructFromPrePost(vector<int>& preorder, vector<int>& postorder) {\n        TreeNode *root = new TreeNode(preorder[preIndex++]);\n        if(root->val != postorder[posIndex])\n        {\n            root->left = constructFromPrePost(preorder, postorder);\n        }\n        if(root->val != postorder[posIndex])\n        {\n            root->right = constructFromPrePost(preorder, postorder);\n        }\n        posIndex++;\n        return root;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-postorder-traversal"}