{"id":610672404,"lang":"cpp","time":"6Â months, 2Â weeks","timestamp":1641012397,"status_display":"Accepted","runtime":"154 ms","url":"/submissions/detail/610672404/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"59.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepest = 0, sum = 0;\n    int deepestLeavesSum(TreeNode* root, int depth = 0) {\n        if(root == NULL)\n        {\n            return 0;\n        }\n        if(root->left == NULL && root->right == NULL)\n        {\n            if(deepest == depth)\n            {\n                sum += root->val;\n            }\n            else if(deepest < depth)\n            {\n                deepest = depth;\n                sum = root->val;\n            }\n        }\n        deepestLeavesSum(root->left, depth + 1);\n        deepestLeavesSum(root->right, depth + 1);\n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"deepest-leaves-sum"}