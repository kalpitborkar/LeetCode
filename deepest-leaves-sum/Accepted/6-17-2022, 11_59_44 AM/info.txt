{"id":724224756,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1655447384,"status_display":"Accepted","runtime":"177 ms","url":"/submissions/detail/724224756/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"61.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        int res = 0, n;\n        std::queue<TreeNode*> q;\n        q.push(root);\n        \n        while(!q.empty())\n        {\n            res = 0, n = q.size();\n            \n            for(int i = 0; i < n; i++)\n            {\n                TreeNode* top = q.front();\n                q.pop();\n                res += top->val;\n                if(top->left) q.push(top->left);\n                if(top->right) q.push(top->right);\n            }\n        }\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum"}