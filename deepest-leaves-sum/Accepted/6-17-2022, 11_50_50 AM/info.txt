{"id":724219073,"lang":"cpp","time":"4Â weeks, 1Â day","timestamp":1655446850,"status_display":"Accepted","runtime":"125 ms","url":"/submissions/detail/724219073/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"59.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepest = 0, res = 0;\n    int deepestLeavesSum(TreeNode* root, int depth = 0) {\n        if(!root) return 0;\n        if(!root->left && !root->right)\n        {\n            if(depth == deepest) res += root->val;\n            else if (depth > deepest)\n            {\n                deepest = depth;\n                res = root->val;\n            }\n        }\n        deepestLeavesSum(root->left, depth + 1);\n        deepestLeavesSum(root->right, depth + 1);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum"}