{"id":730699255,"lang":"cpp","time":"3Â weeks","timestamp":1656143380,"status_display":"Accepted","runtime":"105 ms","url":"/submissions/detail/730699255/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"19 MB","code":"class Solution {\npublic:\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int low = 1, high = *max_element(piles.begin(), piles.end());\n        \n        while(low <= high)\n        {\n            int mid = low + (high - low)/2;\n            double val = 0;\n            \n            for(int i = 0; i < piles.size(); i++)\n            {\n                val += std::ceil((double)(piles[i])/(double)(mid));\n            }\n            \n            if(val <= h) high = mid - 1;\n            else low = mid + 1;\n        }\n        \n        return low;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas"}