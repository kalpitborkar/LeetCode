{"id":730788835,"lang":"cpp","time":"3Â weeks","timestamp":1656153193,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/730788835/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        Node *curr = head;\n        std::unordered_map<Node*, Node*> map;\n        \n        while(curr)\n        {\n            map[curr] = new Node(curr->val);\n            curr = curr->next;\n        }\n        \n        curr = head;\n        \n        while(curr)\n        {\n            map[curr]->next = map[curr->next];\n            map[curr]->random = map[curr->random];\n            curr = curr->next;\n        }\n        \n        return map[head];\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer"}