{"id":675664167,"lang":"cpp","time":"3 months, 1 week","timestamp":1649330650,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/675664167/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.5 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        std::vector<int> lis(nums.size(),1);\n        for(int i = 0; i < nums.size(); i++)\n        {\n            for(int j = 0; j < i; j++)\n            {\n                if(nums[i] > nums[j] && lis[i] < 1 + lis[j])\n                {\n                    lis[i] = 1 + lis[j];\n                }\n            }\n        }\n        return *max_element(lis.begin(), lis.end());\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}