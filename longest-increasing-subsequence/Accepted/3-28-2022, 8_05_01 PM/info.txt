{"id":668997427,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1648478101,"status_display":"Accepted","runtime":"439 ms","url":"/submissions/detail/668997427/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.5 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        std::vector<int> dp(n,1);\n        \n        for(int i = 0; i < n; i++)\n        {\n            for(int j = 0; j < i; j++)\n            {\n                if(nums[j] < nums[i])\n                {\n                    dp[i] = std::max(dp[i], dp[j]+1);\n                }\n            }\n        }\n        return *max_element(dp.begin(), dp.end());\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}