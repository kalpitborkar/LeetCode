{"id":668994118,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1648477749,"status_display":"Accepted","runtime":"499 ms","url":"/submissions/detail/668994118/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.6 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        std::vector<int> dp(n,1);\n        \n        for(int i = n-1; i >= 0; i--)\n        {\n            for(int j = i; j < n; j++)\n            {\n                if(nums[i] < nums[j])\n                {\n                    dp[i] = std::max(dp[j] + 1, dp[i]);\n                }\n            }\n        }\n        return *max_element(dp.begin(), dp.end());\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}