{"id":733119019,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1656390192,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/733119019/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        std::vector<int> res;\n        std::queue<TreeNode*> q;\n        q.push(root);\n        \n        while(!q.empty())\n        {\n            int n = q.size();\n            for(int i = 0; i < n; i++)\n            {\n                TreeNode *top = q.front(); q.pop();\n                if(top)\n                {\n                    if(i == n - 1) res.push_back(top->val);\n                    if(top->left) q.push(top->left);\n                    if(top->right) q.push(top->right);\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}