{"id":600230487,"lang":"cpp","time":"7Â months, 1Â week","timestamp":1639231238,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/600230487/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode* slow = head;\n    ListNode* fast = head;\n    \n    while(fast && fast->next) {\n        slow = slow->next;\n        fast = fast->next->next;\n\n        if(slow == fast) {\n            return true;\n        }\n    }\n    \n    return false;\n    }\n};","compare_result":"11111111111111111111","title_slug":"linked-list-cycle"}