{"id":721159111,"lang":"cpp","time":"1Â month","timestamp":1655117464,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/721159111/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        std::vector<int> sorted;\n        inorder(root, sorted);\n        return sorted[k-1];\n    }\n    \n    void inorder(TreeNode *root, std::vector<int> &arr)\n    {\n        if(!root) return;\n        inorder(root->left, arr);\n        arr.push_back(root->val);\n        inorder(root->right, arr);\n        return;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}