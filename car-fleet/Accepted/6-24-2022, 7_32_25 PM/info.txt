{"id":730149549,"lang":"cpp","time":"3 weeks, 1 day","timestamp":1656079345,"status_display":"Accepted","runtime":"346 ms","url":"/submissions/detail/730149549/","is_pending":"Not Pending","title":"Car Fleet","memory":"85.9 MB","code":"class Solution {\npublic:\n    int carFleet(int target, vector<int>& position, vector<int>& speed) {\n        if(position.empty() || speed.empty()) return 0;\n        \n        std::vector<std::pair<int, double>> intervals;\n        \n        for(int i = 0; i < position.size(); i++)\n        {\n            intervals.push_back(make_pair(position[i], (double)(target - position[i])/(double)(speed[i])));\n        }\n        \n        std::sort(intervals.begin(), intervals.end());\n        \n        int fleetCount = 0;\n        std::pair<int, double> p;\n        \n        p = intervals.back();\n        \n        for(int i = intervals.size() - 2; i >= 0; i--)\n        {\n            if(intervals[i].second > p.second)\n            {\n                fleetCount++;\n                p = intervals[i];\n            }\n        }\n        \n        return fleetCount + 1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"car-fleet"}