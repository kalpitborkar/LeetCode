{"id":674235246,"lang":"cpp","time":"3 months, 1 week","timestamp":1649147673,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/674235246/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"13.9 MB","code":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int result = nums[0], maxProd = 1, minProd = 1;\n        for(int i = 0; i < nums.size(); i++)\n        {\n            if(nums[i] < 0)\n            {\n                std::swap(maxProd, minProd);\n            }\n            maxProd = std::max(nums[i], nums[i]*maxProd);\n            minProd = std::min(nums[i], nums[i]*minProd);\n            result = std::max(result, maxProd);\n        }\n        return result;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}