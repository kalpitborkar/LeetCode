{"id":728160643,"lang":"cpp","time":"3 weeks, 3 days","timestamp":1655872392,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/728160643/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"13.9 MB","code":"class Solution {\npublic:\n    std::vector<std::string> res;\n    std::vector<char> stk;\n    \n    vector<string> generateParenthesis(int n) {\n        backtrack(0, 0, n);\n        return res;\n    }\n    \n    void backtrack(int openN, int closeN, int n)\n    {\n        if(openN == n && closeN == n)\n        {\n            std::cout<<\"asdgh\";\n            std::string ret;\n            for(char c: stk) ret += c;\n            res.push_back(ret);\n            return;\n        }\n        \n        if(openN < n)\n        {\n            stk.push_back('(');\n            backtrack(openN + 1, closeN, n);\n            stk.pop_back();\n        }\n        \n        if(openN > closeN)\n        {\n            stk.push_back(')');\n            backtrack(openN, closeN + 1, n);\n            stk.pop_back();\n        }\n    }\n};","compare_result":"11111111","title_slug":"generate-parentheses"}