{"id":606563821,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1640368577,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/606563821/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isUnivalTree(TreeNode* root) {\n        if(!root)\n        {\n            return true;\n        }\n        if(root->left && root->left->val != root->val) return false;\n        if(root->right && root->right->val != root->val) return false;\n        \n        return isUnivalTree(root->left) && isUnivalTree(root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}