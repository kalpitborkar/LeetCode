{"id":616016673,"lang":"cpp","time":"6 months, 1 week","timestamp":1641703982,"status_display":"Accepted","runtime":"280 ms","url":"/submissions/detail/616016673/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"94.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {\n        ListNode *start = NULL, *end = list1;\n        for(int i = 0; i < b; i++)\n        {\n            if(i == a - 1)\n            {\n                start = end;\n            }\n            end = end->next;\n        }\n        start->next = list2;\n        while(start->next != NULL)\n        {\n            start = start->next;\n        }\n        start->next = end->next;\n        \n        return list1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists"}