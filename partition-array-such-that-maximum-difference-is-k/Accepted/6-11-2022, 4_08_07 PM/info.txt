{"id":719516352,"lang":"cpp","time":"1Â month","timestamp":1654943887,"status_display":"Accepted","runtime":"286 ms","url":"/submissions/detail/719516352/","is_pending":"Not Pending","title":"Partition Array Such That Maximum Difference Is K","memory":"83 MB","code":"class Solution {\npublic:\n    int partitionArray(vector<int>& nums, int k) {\n        /*\n        1. Sort the array\n        2. Iterate through the sorted array:\n            3. First elem of each subarr is the min elem\n            4. If the difference betweem the min elem and the curr elem (max elem) exceeds k, partition.\n            5. Repeat\n        */\n        \n        \n        std::sort(nums.begin(), nums.end());\n        int count = 0, min_elem = nums[0];\n        \n        for(int i = 0; i < nums.size(); i++)\n        {\n            if(nums[i] - min_elem > k)\n            {\n                count += 1;\n                min_elem = nums[i];\n            }\n        }\n        return ++count;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-array-such-that-maximum-difference-is-k"}