{"id":724390870,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1655467359,"status_display":"Accepted","runtime":"257 ms","url":"/submissions/detail/724390870/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"107.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        int level = 0;\n        int maxLevelSum = INT_MIN;\n        int res = 0;\n        std::queue<TreeNode*> q;\n        q.push(root);\n        \n        while(!q.empty())\n        {\n            level++;\n            int n = q.size();\n            int currLevelSum = 0;\n            for(int i = 0; i < n; i++)\n            {\n                TreeNode* top = q.front();\n                q.pop();\n                currLevelSum += top->val;\n                if(top->left) q.push(top->left);\n                if(top->right) q.push(top->right);\n            }\n            \n            if(currLevelSum > maxLevelSum)\n            {\n                maxLevelSum = currLevelSum;\n                res = level;\n            }\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree"}