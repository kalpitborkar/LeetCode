{"id":719318792,"lang":"cpp","time":"1Â month","timestamp":1654921725,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/719318792/","is_pending":"Not Pending","title":"Sort the Matrix Diagonally","memory":"9.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {\n        std::unordered_map<int, std::vector<int>> diag;\n        \n        int m = mat.size();\n        int n = mat[0].size();\n        \n        \n        for(int i = 0; i < m; i++)\n        {\n            for(int j = 0; j < n; j++)\n            {\n                diag[i-j].push_back(mat[i][j]);\n            }\n        }\n        \n        for(int i = -(n-1); i <= m-1; i++)\n        {\n            std::sort(diag[i].begin(), diag[i].end());\n        }\n        \n        for(int i = m-1; i >= 0; i--)\n        {\n            for(int j = n-1; j >= 0; j--)\n            {\n                mat[i][j] = diag[i-j].back();\n                diag[i-j].pop_back();\n            }\n        }\n        return mat;\n    }\n};","compare_result":"111111111111111","title_slug":"sort-the-matrix-diagonally"}