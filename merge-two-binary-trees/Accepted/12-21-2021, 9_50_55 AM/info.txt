{"id":604791654,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1640060455,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/604791654/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"32.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n        if(root1 == NULL & root2 == NULL)\n        {\n            return NULL;\n        }\n        if(root1 == NULL)\n        {\n            return root2;\n        }\n        if(root2 == NULL)\n        {\n            return root1;\n        }\n        TreeNode *n = new TreeNode(root1->val + root2->val);\n        n->left = mergeTrees(root1->left, root2->left);\n        n->right = mergeTrees(root1->right, root2->right);\n        return n;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}