{"id":694145713,"lang":"cpp","time":"2 months, 1 week","timestamp":1651819095,"status_display":"Accepted","runtime":"234 ms","url":"/submissions/detail/694145713/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"85.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        std::stack<int> stk1, stk2;\n        std::vector<int> res;\n        inOrder(root1, stk1);\n        inOrder(root2, stk2);\n        while(!stk1.empty() && !stk2.empty())\n        {\n            if(stk2.top() > stk1.top())\n            {\n                res.push_back(stk1.top());\n                stk1.pop();\n            }\n            else\n            {\n                res.push_back(stk2.top());\n                stk2.pop();\n            }\n        }\n        while(!stk1.empty())\n        {\n            res.push_back(stk1.top());\n            stk1.pop();\n        }\n        while(!stk2.empty())\n        {\n            res.push_back(stk2.top());\n            stk2.pop();\n        }\n        return res;\n    }\n    \n    void inOrder(TreeNode *root, std::stack<int> &stk)\n    {\n        if(root == NULL) return;\n        inOrder(root->right, stk);\n        stk.push(root->val);\n        inOrder(root->left, stk);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}