{"id":719380716,"lang":"cpp","time":"1Â month","timestamp":1654928476,"status_display":"Accepted","runtime":"273 ms","url":"/submissions/detail/719380716/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"86.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        std::vector<int> tree1;\n        std::vector<int> tree2;\n        preOrder(root1, tree1);\n        preOrder(root2, tree2);\n        \n        int iter1 = 0, iter2 = 0;\n        int tree1Size = tree1.size(), tree2Size = tree2.size();\n        \n        std::vector<int> res;\n        \n        while(iter1 < tree1Size && iter2 < tree2Size)\n        {\n            if(tree1[iter1] < tree2[iter2]) res.push_back(tree1[iter1++]);\n            else res.push_back(tree2[iter2++]);\n        }\n        while(iter1 < tree1Size) res.push_back(tree1[iter1++]);\n        while(iter2 < tree2Size) res.push_back(tree2[iter2++]);\n        return res;\n    }\n    \n    void preOrder(TreeNode* root, std::vector<int> &pre)\n    {\n        if(!root) return;\n        preOrder(root->left, pre);\n        pre.push_back(root->val);\n        preOrder(root->right, pre);\n        return;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}