{"id":725701799,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1655616310,"status_display":"Accepted","runtime":"456 ms","url":"/submissions/detail/725701799/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"116.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int pairSum(ListNode* head) {\n        ListNode *slow = head, *fast = head;\n        \n        while(fast && fast->next)\n        {\n            fast = fast->next->next;\n            slow = slow->next;\n        }\n        \n        \n        ListNode *prev = NULL, *nextNode;\n        while(slow)\n        {\n            nextNode = slow->next;\n            slow->next = prev;\n            prev = slow;\n            slow = nextNode;\n        }\n        \n        \n        int maxVal = 0;\n        while(prev)\n        {\n            maxVal = std::max(prev->val + head->val, maxVal);\n            prev = prev->next;\n            head = head->next;\n        }\n        \n        return maxVal;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-twin-sum-of-a-linked-list"}