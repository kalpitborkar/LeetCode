{"id":607757726,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1640579391,"status_display":"Accepted","runtime":"196 ms","url":"/submissions/detail/607757726/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"113.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nodesBetweenCriticalPoints(ListNode* head) {\n        int first = INT_MAX, last = 0, prev_val = head->val, min_d = INT_MAX;\n        for(int i = 0; head->next != NULL; i++)\n        {\n            if(std::max(prev_val, head->next->val) < head->val ||\n               std::min(prev_val, head->next->val) > head->val)\n            {\n              if(last != 0)\n              {\n                  min_d = std::min(min_d, i - last);\n              }\n                last = i;\n                first = std::min(first, i);\n            }\n            prev_val = head->val;\n            head = head->next;\n        }\n        if(min_d == INT_MAX)\n        {\n            return {-1,-1};\n        }\n        return {min_d, last - first};\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points"}