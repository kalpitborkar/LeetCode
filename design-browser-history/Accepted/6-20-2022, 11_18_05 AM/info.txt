{"id":726486618,"lang":"cpp","time":"3 weeks, 5 days","timestamp":1655704085,"status_display":"Accepted","runtime":"316 ms","url":"/submissions/detail/726486618/","is_pending":"Not Pending","title":"Design Browser History","memory":"122.5 MB","code":"class BrowserHistory {\npublic:\n    std::stack<std::string> backHistory, forwardHistory;\n    \n    BrowserHistory(string homepage) {\n        backHistory.push(homepage);\n        forwardHistory = std::stack<std::string>();\n    }\n    \n    void visit(string url) {\n        backHistory.push(url);\n        forwardHistory = std::stack<std::string>();\n    }\n    \n    string back(int steps) {\n        while(steps > 0 && backHistory.size() > 1)\n        {\n            forwardHistory.push(backHistory.top());\n            backHistory.pop();\n            steps--;\n        }\n        return backHistory.top();\n    }\n    \n    string forward(int steps) {\n        while(steps > 0 && forwardHistory.size() > 0)\n        {\n            backHistory.push(forwardHistory.top());\n            forwardHistory.pop();\n            steps--;\n        }\n        return backHistory.top();\n    }\n};\n\n/**\n * Your BrowserHistory object will be instantiated and called as such:\n * BrowserHistory* obj = new BrowserHistory(homepage);\n * obj->visit(url);\n * string param_2 = obj->back(steps);\n * string param_3 = obj->forward(steps);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-browser-history"}